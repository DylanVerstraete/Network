!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";const t=globalThis.$;t.cnsl=function(...t){console.log(...t)};const a={componentMethods:{},config:{},events:{},utility:t};globalThis.app=a;const{utility:{isString:e}}=a,n=t=>{const a=t.name;return e(a)&&!t?new Ractive.components[a]:Ractive.components[a]?new Ractive.components[a](t):void(Ractive.components[a]=Ractive.extend(t))};window.Ractive.prototype.data={$:a.utility,getComponent(t){const a=t,e=`<${t} />`;console.log(a);return Boolean(this.partials[t])||(this.partials[t]=e),t},makePartial(t,a){const e=`partial-${t}`;return Boolean(this.partials[t])||(this.partials[e]=a),e}},a.component=n;const{utility:{findIndex:s,hasValue:i,get:l,isPlainObject:c,findItem:o,assignDeep:d,ensureArray:r,assign:p,each:u,isArray:m,isEmpty:h,sortNewest:g,sortOldest:v,clear:b}}=a,f={async afterIndex(t,a,e,n="id"){const l=s(this.get(t),a,n);i(l)?await this.splice(t,l+1,0,...r(e)):await this.push(t,e)},async assign(t,a){const e=this.get(t);if(i(e))return d(e,a),await this.update(t),e},async beforeIndex(t,a,e,n="id"){const l=s(this.get(t),a,n);i(l)?await this.splice(t,l-1,0,...r(e)):await this.push(t,e)},async clearArray(t){const a=this.get(t);a&&(b(a),await this.update(t))},findItem(t,a,e="id"){const n=o(this.get(t),a,e);if(i(n))return n},getIndex(t,a,e="id"){const n=s(this.get(t),a,e);if(i(n))return n},async mergeItem(t,a,e,n="id"){const s=o(this.get(t),a,n);if(i(s))return d(s,e),await this.update(t),s},async removeIndex(t,a,e="id"){const n=s(this.get(t),a,e);i(n)&&await this.splice(t,n,1)},async setIndex(t,a,e,n="id",c){const o=c||{},d=s(this.get(t),a,n);if(i(d)){const a=o.pathSuffix?`.${o.pathSuffix}`:"";await this.set(`${t}.${d}${a}`,e)}else"insert"===l("conflict",o)&&await this[l("conflictMethod",o)||"push"](t,e)},async sortNewest(t,a="id"){const e=this.get(t);g(e,a,!0),await this.update(t)},async sortOldest(t,a="id"){const e=this.get(t);v(e,a,!0),await this.update(t)},async syncCollection(t,a,e="push",n="id"){const s=this.get(t);if(c(s))d(s,a);else{const t=r(a);u(t,(t=>{const a=o(s,t[n],n);i(a)?p(a,t):s[e](t)}))}await this.update(t)},async toggleIndex(t,a,e,n="id"){let l;const c=m(a);l=c&&!h(a)?a.shift():a;const o=s(this.get(t),l,n);if(i(o)){const a=e?`.${e}`:"";await this.toggle(`${t}.${o}${a}`)}c&&!h(a)&&await this.toggleIndex(t,a,e,n)},async updateItem(t,a,e,n="id"){const s=o(this.get(t),a,n);if(i(s))return e(s),await this.update(t),s}};p(Ractive.prototype,f);const{utility:{assign:y,cnsl:w,compactMapArray:k,isEmpty:x,eachAsync:C,eachObject:$,eachArray:I,isString:A,isPlainObject:R,hasValue:B,drop:O}}=a;w("Initilizing watchers module.","notify");const T={},_=[];class S{constructor(t,a){a.regex=t,this._={isWatcher:!0},this.callable=a,this.number=_.push(a)-1}start(){B(this.number)||(this.number=_.push(this.callable)-1)}stop(){B(this.number)&&(O(_,this.number),this.number=null)}}const j=(t,a)=>new S(t,a);class z{constructor(t,a,e){this._={isWatcher:!0},this.root=()=>e,this.type=t,T[t]||(T[t]=[]);const n=T[t];this.number=n.push(a)-1}start(){B(this.number)||(this.number=T[this.type].push(this.callable)-1)}stop(){B(this.number)&&(O(_,this.number),this.number=null)}}const D=(t,a,e)=>new z(t,a,e);class M{constructor(t,a){const e=this;e._={isWatcher:!0};const n=[],s=a.prefix?`${a.prefix}.`:"",i=a.suffix?`.${a.suffix}`:"";$(t,((t,a)=>{n.push(D(`${s}${a}${i}`,t,e))})),e.watching=n}start(){I(this.watching,(t=>{t.start()}))}stop(){I(this.watching,(t=>{t.stop()}))}}const N=(t,a)=>new M(t,a),W=(t,a)=>{let e;return e=A(t)?D:R(t)?N:j,e(t,a)};W.status=!0,W.start=()=>{W.status=!0},W.stop=()=>{W.status=null};y(a,{watch:W,watchers:T,watcherUpdate:async t=>{if(!W.status||!t)return;const{body:a}=t;if(!a)return;const e=a.type,n=[],s=T[e],i=k(_,(t=>{if(t.regex.test(e))return t}));x(i)||n.push(...i),s&&n.push(...s),console.log(n),n.length&&C(n,(t=>t.load(a)))}});const{utility:{each:P,assign:E}}=a;document.querySelector("head");E(a,{componentsWithCss:{},importedCss:{},importedCssCount:{}}),n({name:"autocomplete",template:'<input type="text" id="autocomplete-input" class="autocomplete">'}),console.log("autocomplete"),n({name:"badge",template:'<span class="uk-badge"></span>'}),console.log("badge"),n({name:"breadcrumb",template:'<ul class="uk-breadcrumb">\n    <li><a href=""></a></li>\n    <li><a href=""></a></li>\n    <li><span></span></li>\n</ul>'}),console.log("breadcrumb"),n({name:"btn",template:'<a class="uk-button uk-button-default" href=""></a>\n\t\t<button class="uk-button uk-button-default"></button>\n\t\t<button class="uk-button uk-button-default" disabled></button>'}),console.log("button"),n({name:"card",template:'<div class="uk-card uk-card-body">\n    <h3 class="uk-card-title"></h3>\n\t</div>'}),console.log("card"),n({name:"carousel",template:'<div class="carousel">\n    {{#items}}\n      <a class="carousel-item" href="{{url}}">\n        <img src="{{image}}">\n      </a>\n    {{/}}\n\t</div>'}),console.log("carousel"),n({name:"checkbox",template:'<input type="checkbox" checked="checked" />'}),console.log("checkbox"),n({name:"chip",template:'<div class="chip">{{data.text}}</div>'}),console.log("chip"),n({name:"collapsible",template:' <ul class="collapsible">\n\t\t{{#data.items}}\n\t    <li>\n\t      <div class="collapsible-header">\n\t\t\t\t\t{{#icon}}\n\t\t\t\t\t\t<i class="material-icons">{{name}}</i>\n\t\t\t\t\t{{/}}\n\t\t\t\t\t{{title}}\n\t\t\t\t</div>\n\t      <div class="collapsible-body"><span>{{content}}</span></div>\n\t    </li>\n\t\t{{/}}\n  </ul>'}),console.log("collapsible"),n({name:"collection",template:'<ul class="collection {{header? \'with-header\' : \'\'}}">\n\t\t{{#data.header}}\n      <li class="collection-header"><h4>{{title}}</h4></li>\n\t\t{{/}}\n\t\t{{#data.items}}\n      <li class="collection-item">\n\t\t\t\t<div>\n\t\t\t\t\t{{title}}\n\t\t\t\t\t{{#actions}}\n\t\t\t\t\t\t<a href="{{url}}" on-click="[\'action\']" class="secondary-content">\n\t\t\t\t\t\t\t{{#icon}}\n\t\t\t\t\t\t\t\t<i class="material-icons">{{name}}</i>\n\t\t\t\t\t\t\t{{/}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{{/}}\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t{{/}}\n    </ul>'}),console.log("collection"),n({name:"dropDown",template:"<a class='dropdown-trigger btn' data-target='{{@._guid}}'>Drop Me!</a>\n  <ul id='{{@._guid}}' class='dropdown-content'>\n\t{{#data.items}}\n    <li>\n\t\t\t<a href=\"{{url}}\">\n\t\t\t\t{{#icon}}\n\t\t\t\t\t<i class=\"material-icons\">{{name}}</i>\n\t\t\t\t{{/}}\n\t\t\t\t{{text}}\n\t\t\t</a>\n\t\t</li>\n\t{{/}}\n  </ul>"}),console.log("dropdown"),n({name:"fabsCard",template:'<div class="card {{data.color? data.color : \'blue-grey\'}} {{data.darken? data.darken : \'darken-1\'}}">\n\t\t\t<div class="card-image">\n\t\t\t<img src="{{data.image}}">\n\t\t\t\t<span class="card-title">{{data.title}}</span>\n\t\t\t\t{{#data.actions}}\n\t\t\t\t\t<a class="btn-floating halfway-fab waves-effect waves-light {{color}}" on-click="[\'action\']"><i class="material-icons">{{icon}}</i></a>\n\t\t\t\t{{/}}\n\t\t\t</div>\n\t\t\t<div class="card-content">\n\t\t\t\t<p>{{data.content}}</p>\n\t\t\t</div>\n\t\t</div>'}),console.log("fabsCard"),n({name:"featureDiscovery",template:'<a id="menu" class="waves-effect waves-light btn btn-floating">\n\t\t<i class="material-icons">menu</i></a>\n  \t<div class="tap-target" data-target="menu">\n    <div class="tap-target-content">\n      <h5>data.title</h5>\n      <p>A bunch of text</p>\n    </div>\n  </div>'}),console.log("featureDiscovery"),n({name:"flatButton",template:'<a class="btn-floating btn-large waves-effect waves-light {{data.color}}" on-click="[\'action\']">\n    {{#data.icon}}\n      <i class="material-icons {{data.icon.direction}}">{{data.icon.name}}</i>\n    {{/}}\n    {{#data.text}}\n      {{data.text}}\n    {{/}}\n  </a>'}),console.log("flatButton"),n({name:"floatingActionButton",template:'<div class="fixed-action-btn">\n    <a class="btn-floating btn-large {{data.color}}">\n      <i class="large material-icons">{{data.icon}}</i>\n    </a>\n    <ul>\n\t\t{{#data.actions}}\n      <li><a class="btn-floating {{color}}"><i class="material-icons">{{icon}}</i></a></li>\n\t\t{{/}}\n    </ul>\n  </div>'}),console.log("floatingActionButton"),n({name:"horizontalCard",template:'<div class="col s12 m7">\n     <h2 class="header">{{data.title}}</h2>\n     <div class="card horizontal">\n       <div class="card-image">\n         <img src="{{data.image}}">\n       </div>\n       <div class="card-stacked">\n         <div class="card-content">\n           <p>{{data.content}}</p>\n         </div>\n         <div class="card-action">\n\t\t\t\t \t{{#data.actions}}\n          \t<a href="{{url}}">{{text}}</a>\n\t\t\t\t\t{{/}}\n         </div>\n       </div>\n     </div>\n   </div>'}),console.log("horizontalCard"),n({name:"icon",template:'<script src="uikit/dist/js/uikit-icons.min.js"><\/script>\n\t\t<span uk-icon="icon: check"></span>\n\t\t<a href="" uk-icon="icon: heart"></a>'}),console.log("icon"),n({name:"image",template:'<img data-src="" width="" height="" alt="" uk-img>'}),console.log("image"),n({name:"imageCard",template:'<div class="card">\n\t\t<div class="card-image">\n\t\t\t<img src="{{data.image}}">\n\t\t\t<span class="card-title">{{data.title}}</span>\n\t\t</div>\n\t\t<div class="card-content">\n\t\t\t<p>{{data.content}}</p>\n\t\t</div>\n\t\t<div class="card-action">\n\t\t\t{{#data.actions}}\n\t\t\t\t<a href="{{url}}" on-click="[\'action\']">{{text}}</a>\n\t\t\t{{/}}\n\t\t</div>\n  </div>'}),console.log("imageCard"),n({name:"modal",template:'<button uk-toggle="target: #my-id" type="button">\n\t</button>\n\t<div id="my-id" uk-modal>\n    <div class="uk-modal-dialog uk-modal-body">\n        <h2 class="uk-modal-title"></h2>\n        <button class="uk-modal-close" type="button"></button>\n  \t</div>\n\t</div>'}),console.log("modal"),n({name:"panelCard",template:'<div class="row">\n     <div class="col s12 m5">\n       <div class="card-panel {{data.color}}">\n         <span class="white-text">{{data.content}}</span>\n       </div>\n     </div>\n   </div>'}),console.log("panelCard"),n({name:"picker",template:'<input type="text" class="datepicker" />'}),console.log("picker"),n({name:"radioButton",template:'<input name="{{data.name}}" type="radio" checked />'}),console.log("radioButton"),n({name:"range",template:'<input type="range" min="{{data.min}}" max="{{data.max}}" value="{{data.value}}" />'}),console.log("range"),n({name:"revealCard",template:'<div class="card">\n      <div class="card-image waves-effect waves-block waves-light">\n        <img class="activator" src="{{data.url}}">\n      </div>\n      <div class="card-content">\n        <span class="card-title activator grey-text text-darken-4">{{data.title}}\n\t\t\t\t{{#data.btns}}\n\t\t\t\t\t<i class="material-icons right">more_vert</i>\n\t\t\t\t{{/}}\n\t\t\t\t</span>\n        <p>\n\t\t\t\t\t{{#data.links}}\n\t\t\t\t\t\t<a href="{{url}}">This is a link</a>\n\t\t\t\t\t{{/}}\n\t\t\t\t</p>\n      </div>\n      <div class="card-reveal">\n        <span class="card-title grey-text text-darken-4">{{revealTitle}}<i class="material-icons right">close</i></span>\n        <p>{{revealContent}}</p>\n      </div>\n    </div>'}),console.log("revealCard"),n({name:"select",template:"<select>\n\t\t{{#data.options}}\n      <option value=\"{{value}}\" {{disabled? 'disabled' : ''}} {{selected? 'selected' : ''}}>{{text}}</option>\n\t\t{{/}}\n    </select>"}),console.log("select"),n({name:"sideNav",template:'<a href="" uk-slidenav-next></a>\n\t\t<a href="" uk-slidenav-previous></a>'}),console.log("sideNav"),n({name:"switch",template:'<div class="switch">\n  \t<label>\n      Off\n      <input value="{{data.value}}" type="checkbox" {{data.disabled?  \'disabled\' : \'\'}}>\n      <span class="lever"></span>\n      On\n    </label>\n  </div>'}),console.log("switch"),n({name:"tabs",template:'<div>\n\t<ul class="tabs">\n        {{#data.tabs}}\n\t\t\t\t\t<li class="tab col s3"><a class="{{active? \'active\' : \'\'}}" href="#{{target}}">{{text}}</a></li>\n      \t{{/}}\n\t\t\t</ul>\n    {{#data.tabs}}\n\t\t\t<div id="{{target}}" class="col s12">{{content}}</div>\n\t\t{{/}}\n\t\t</div>'}),console.log("tabs"),n({name:"textInput",template:'<input id="email_inline" type="email" class="validate">'}),console.log("textInput");const{utility:{assign:V}}=a,q=new Ractive({target:"body",data:()=>({components:{dynamic:{},layout:{},main:{}},notification:[],pageTitle:"",screenSize:""}),template:"{{#components.main:key}}{{>getComponent(key)}}{{/}}"}),U=new Ractive({target:"head",append:!0,data:()=>({text:()=>q.get("pageTitle")}),template:"<title>{{text()}}</title>"});V(a,{view:q,pageTitle:U})}));
